27.	Consider the order of request for cylinder access of the disk is - (98, 183, 37, 122, 14, 124, 65, 67) and current position of Read/Write head is: 53. Find the total head movements to access the data on the cylinder using following disk scheduling algorithms:
1)	FCFS
2)	 C SCAN

#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

#define NUM_REQUESTS 8
#define CYLINDERS 200

// Function to calculate the total head movements using FCFS algorithm
int fcfs(int requests[], int head_position) {
    int total_head_movements = 0;

    for (int i = 0; i < NUM_REQUESTS; i++) {
        total_head_movements += abs(requests[i] - head_position);
        head_position = requests[i];
    }

    return total_head_movements;
}

// Function to calculate the total head movements using C-SCAN algorithm
int cscan(int requests[], int head_position) {
    int total_head_movements = 0;

    // Sort requests in ascending order
    for (int i = 0; i < NUM_REQUESTS - 1; i++) {
        for (int j = 0; j < NUM_REQUESTS - i - 1; j++) {
            if (requests[j] > requests[j + 1]) {
                int temp = requests[j];
                requests[j] = requests[j + 1];
                requests[j + 1] = temp;
            }
        }
    }

    // Find the index of the first request greater than the current position
    int index = 0;
    while (index < NUM_REQUESTS && requests[index] < head_position) {
        index++;
    }

    // Calculate total head movements considering C-SCAN
    if (index == NUM_REQUESTS) {
        // If all requests are less than current position, head moves to the end and scans back to the beginning
        total_head_movements = CYLINDERS - head_position + requests[0];
    } else {
        total_head_movements = CYLINDERS - head_position + CYLINDERS - requests[index];
    }

    return total_head_movements;
}

int main() {
    int requests[NUM_REQUESTS] = {98, 183, 37, 122, 14, 124, 65, 67};
    int head_position = 53;

    int total_head_movements_fcfs = fcfs(requests, head_position);
    printf("Total head movements using FCFS: %d\n", total_head_movements_fcfs);

    int total_head_movements_cscan = cscan(requests, head_position);
    printf("Total head movements using C-SCAN: %d\n", total_head_movements_cscan);

    return 0;
}
